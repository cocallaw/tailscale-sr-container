name: Auto Build & Publish Tailscale Container

on:
  schedule:
    - cron: '0 0 */3 * *'  # Every 3 days at 00:00 UTC
  workflow_dispatch:

permissions:
  contents: write  # Needed to commit version file

jobs:
  check-and-build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Get latest Tailscale stable version
        id: tailscale
        run: |
          VERSION=$(curl -s https://registry.hub.docker.com/v2/repositories/tailscale/tailscale/tags/?page_size=100 \
            | jq -r '.results[].name' \
            | grep -E '^v[0-9]+\.[0-9]+(\.[0-9]+)?$' \
            | sort -V \
            | tail -n1)
          echo "Latest stable version: $VERSION"
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"

      - name: Debug version
        run: |
            echo "Detected Tailscale version: ${{ steps.tailscale.outputs.version }}"

      - name: Check if image with version already exists
        id: check
        run: |
          if docker manifest inspect ${{ secrets.DOCKERHUB_USERNAME }}/tailscale-sr:${{ steps.tailscale.outputs.version }} > /dev/null 2>&1; then
            echo "Image already exists. Skipping build."
            echo "build_needed=false" >> $GITHUB_OUTPUT
          else
            echo "New version. Proceeding to build."
            echo "build_needed=true" >> $GITHUB_OUTPUT
          fi

      - name: Set up QEMU
        if: steps.check.outputs.build_needed == 'true'
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        if: steps.check.outputs.build_needed == 'true'
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        if: steps.check.outputs.build_needed == 'true'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push multi-arch container
        if: steps.check.outputs.build_needed == 'true'
        uses: docker/build-push-action@v3
        with:
          context: ./docker
          build-args: |
            TAILSCALE_TAG=${{ steps.tailscale.outputs.version }}
          platforms: linux/386,linux/amd64,linux/arm/v7,linux/arm64
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/tailscale-sr:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/tailscale-sr:${{ steps.tailscale.outputs.version }}

      - name: Commit updated version file
        if: steps.check.outputs.build_needed == 'true'
        run: |
          echo "${{ steps.tailscale.outputs.version }}" > tailscale-version.txt
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add tailscale-version.txt
          git commit -m "Update Tailscale version to ${{ steps.tailscale.outputs.version }}"
          git push